{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["\"use strict\";\n\nvar init = function() {\n  var el = {\n    viewport: $(\"#viewport\")\n  };\n\n  var screenWidth = $(\"body\").innerWidth();\n  var screenHeight = $(document).innerHeight();\n\n  el.viewport.width(screenWidth);\n  el.viewport.height(screenHeight);\n\n  Physics(function(world) {\n\n    var viewWidth = screenWidth;\n    var viewHeight = screenHeight;\n\n    var renderer = Physics.renderer('canvas', {\n      id: 'viewport',\n      width: viewWidth,\n      height: viewHeight,\n      meta: false, // don't display meta data\n      styles: {\n        // set colors for the circle bodies\n        'circle' : {\n          strokeStyle: '#351024',\n          lineWidth: 1,\n          fillStyle: '#d33682',\n          angleIndicator: '#351024'\n        }\n      }\n    });\n\n    // add the renderer\n    world.add( renderer );\n    // render on each step\n    world.on('step', function(){\n      world.render();\n    });\n\n    // bounds of the window\n    var viewportBounds = Physics.aabb(0, 0, viewWidth, viewHeight);\n\n    // constrain objects to these bounds\n    world.add(Physics.behavior('edge-collision-detection', {\n      aabb: viewportBounds,\n      restitution: 0.99,\n      cof: 0.99\n    }));\n\n    // add a circle\n    world.add(\n      Physics.body('circle', {\n        x: 50, // x-coordinate\n        y: 30, // y-coordinate\n        vx: 0.2, // velocity in x-direction\n        vy: 0.01, // velocity in y-direction\n        radius: 20\n      })\n    );\n\n    // ensure objects bounce when edge collision is detected\n    world.add( Physics.behavior('body-impulse-response') );\n\n    // add some gravity\n    world.add( Physics.behavior('constant-acceleration') );\n\n    // subscribe to ticker to advance the simulation\n    Physics.util.ticker.on(function( time, dt ) {\n      world.step( time );\n    });\n\n    // start the ticker\n    Physics.util.ticker.start();\n\n  });\n};\n\n$(document).ready(function() {\n  init();\n});"],"sourceRoot":"/source/"}